// Generate connected resources based on pug/data/config.json : css and js blocks.
// list: list of resources names. for example path to the resources list: config.css.plain.list
// name: block to detect libs and own resources
// type: type of a resource. needed to generate respectively DOM node.
mixin addResources(list, name, type)
	if ( list && name && type )
		if ( type == 'js' )
			if ( name == config.js.plain.objname)
				+defineResourceMetaData( config.js.plain.path, config.js.plain.ext )
			if ( name == config.js.vendor.objname)
				+defineResourceMetaData( config.js.vendor.path, config.js.vendor.ext )
		if ( type == 'css' )
			if ( name == config.css.plain.objname )
				+defineResourceMetaData( config.css.plain.path, config.css.plain.ext )
			if ( name == config.css.vendor.objname )
				+defineResourceMetaData( config.css.vendor.path, config.css.vendor.ext )
		+iterateResource(list, type, path, ext)

// Generate variables for path to resource
mixin defineResourceMetaData(pathToResource, resourceExtention)
	- path = pathToResource
	- ext = resourceExtention

// Generate right type of DOM node respectively on resource extention
mixin iterateResource(data, sourceType, sourcePath, sourceExtention)
	if ( sourceType == 'css')
		each source in data
			link( rel='stylesheet' href=sourcePath + source + sourceExtention)
	if ( sourceType == 'js' )
		each source in data
			script(src=sourcePath+source+sourceExtention)